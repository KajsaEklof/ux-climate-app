{"version":3,"sources":["components/images/headerbackground.png","components/images/logo.png","components/images/before.jpg","components/images/after.jpg","components/images/logopink.png","components/InteractiveMap.jsx","components/RenderMap.jsx","components/Header.jsx","components/TextImage.jsx","components/PopupCard.jsx","components/Co2Diagram.jsx","components/LineCharts.jsx","components/AreaCharts.jsx","components/BeforeAfterSlider.jsx","components/CompareHabits.jsx","components/Footer.jsx","components/MenuBar.jsx","components/Tips.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","geoUrl","rounded","num","Math","round","markers","markerOffset","name","coordinates","memo","setTooltipContent","data-tip","projectionConfig","scale","geography","geographies","map","geo","key","rsmKey","onMouseEnter","properties","NAME","POP_EST","DANGER","inDanger","notDanger","onMouseLeave","style","default","fill","outline","stroke","hover","pressed","strokeWidth","strokeLinecap","strokeLinejoin","transform","cx","cy","r","d","RenderMap","useState","content","setContent","className","Container","Row","Col","xs","InteractiveMap","Header","state","Jumbotron","fluid","id","target","rel","href","Image","src","Logo","headerImage","Component","TextImage","props","data2","textData","heading1","this","headingStyle","heading","hbox1","hbox2","box1","box2","thisStyle","border","imageTag","color","maxWidth","height","picture","alt","altText","textTag","textData1","textData2","layout","PopupCard","Card","width","Body","Title","cardTitle","Text","cardText1","cardText2","onClick","closePopup","Co2Diagram","showPopup","setState","co2","CO2Emission","undefined","COLORS","dataBarChart","x","push","Year","Total","GasFuel","LiquidFuel","SolidFuel","Cement","GasFlaring","nth","filter","e","i","togglePopUp","bind","Button","variant","data","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","type","activeDot","LineCharts","temp","globalTemp","dataLineChart1","dataLineChart2","Mean","reverse","syncId","label","y","Icon","AreaCharts","ice","iceVolume","sea","seaLevel","Time","GMSL","BeforeAfter","before","beforeImage","after","afterImage","text","CheckBox","onChange","handleCheckedElement","checked","isChecked","value","CompareHabits","event","habits","forEach","habit","console","log","checkList","index","subHeading","domain","barSize","isAnimationActive","verticalAlign","align","Footer","Date","getFullYear","MenuBar","activeItem","handleItemClick","Sticky","context","Menu","pointing","secondary","Item","position","active","Tips","wrapped","ui","Content","Description","App","contextRef","createRef","mapContent","emissionData","co2Data","glacierData","icejsonData","seaData","seajsonData","parse","substring","yearFilteredTempData","tempjsonData","tempData","p","Source","ref","introduction","info1","info2","co2Popup","co2Food","co2Clothes","co2vsTempPopup","glaciers","BeforeAfterSlider","beforeAfter","icevsSeaPopup","subheading","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2a31814.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headerbackground.4e0af23e.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.32924da0.png\";","module.exports = __webpack_public_path__ + \"static/media/before.02aeee85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/after.042bd24e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logopink.61f42c57.png\";","import React, { memo } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\nimport data from \"./MapData.json\";\n\nconst geoUrl = data;\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst markers = [\n  { markerOffset: 15, name: \"Brazil\", coordinates: [-47.8825, -15.7942] },\n  {\n    markerOffset: 15,\n    name: \"United States of America\",\n    coordinates: [-97, 35]\n  },\n  {\n    markerOffset: 15,\n    name: \"United Kingdom\",\n    coordinates: [-3, 55]\n  },\n  {\n    markerOffset: 15,\n    name: \"Italy\",\n    coordinates: [14, 41]\n  },\n  {\n    markerOffset: 15,\n    name: \"Spain\",\n    coordinates: [-3, 39]\n  },\n  {\n    markerOffset: 15,\n    name: \"Egypt\",\n    coordinates: [30, 25]\n  },\n  {\n    markerOffset: 15,\n    name: \"Netherlands\",\n    coordinates: [6, 52]\n  },\n  {\n    markerOffset: 15,\n    name: \"India\",\n    coordinates: [80, 20]\n  },\n  {\n    markerOffset: 15,\n    name: \"China\",\n    coordinates: [110, 30]\n  },\n  {\n    markerOffset: 15,\n    name: \"Japan\",\n    coordinates: [137, 35]\n  }\n];\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <>\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const { NAME, POP_EST, DANGER } = geo.properties;\n                    const inDanger = `${NAME} – Population: ${rounded(\n                      POP_EST\n                    )} – ${DANGER}`;\n                    const notDanger = `${NAME} – Population: ${rounded(\n                      POP_EST\n                    )}`;\n                    setTooltipContent(`${!DANGER ? notDanger : inDanger}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\",\n                      stroke: \"#C4C4CA\"\n                    },\n                    hover: {\n                      fill: \"#00A99D\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#00A99D\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n        {markers.map(({ name, coordinates, markerOffset }) => (\n          <Marker key={name} coordinates={coordinates}>\n            <g\n              fill=\"none\"\n              stroke=\"#EF0E7C\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              transform=\"translate(-12, -24)\"\n            >\n              <circle cx=\"12\" cy=\"10\" r=\"3\" />\n              <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n            </g>\n            {/* <text\n              textAnchor=\"middle\"\n              y={markerOffset}\n              style={{ fontFamily: \"system-ui\", fill: \"#000000\" }}\n            >\n              {name}\n            </text> */}\n          </Marker>\n        ))}\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport InteractiveMap from \"./InteractiveMap\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction RenderMap() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div className=\"spacing\">\n      <Container className=\"container main\">\n        <Row>\n          <h3 className=\"heading\">\n            <span>Consequences Of Rising Seas</span>\n          </h3>\n        </Row>\n        <Row>\n          <Col className=\"container\" xs={10}>\n            <InteractiveMap setTooltipContent={setContent} />\n            <ReactTooltip>{content}</ReactTooltip>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"container\" xs={6}>\n            <p>\n              Even a small change in sea levels can have a disastrous effect on\n              those living close to the sea but also everyone else. Higher sea\n              levels can bring on more dangerous hurricanes and typhoons that\n              move slower than usual and drop more rain. There are already\n              millions of people around the world who are at risk of floods and\n              many are being forced to move to higher ground. Already people on\n              the coast of Wales in Great Britain are at risk of becoming\n              climate refugees in the next few years, and most likely not the\n              last. You might think this is only a problem in countries far away\n              but this is a problem which will have consequences all over the\n              world.\n            </p>\n          </Col>\n          <Col className=\"container\" xs={6}>\n            <p>\n              Rising sea levels could impact your internet access since much of\n              our communications infrastructure is in places where the sea is\n              rising!\n            </p>\n            <p className=\"mapText\">\n              The areas marked on the map are some of the most vulnerable in the\n              world that will be affected by rising sea levels. All coastal\n              communities across the world will be affected, and some will get\n              hit harder than others. More than 90 coastal cities in the US are\n              already experiencing flooding and three-quarters of all European\n              cities will be at risk, especially in the Netherlands, Spain and\n              Italy.{\" \"}\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default RenderMap;\n","import React, { Component } from \"react\";\nimport headerImage from \"./images/headerbackground.png\";\nimport \"../App.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Image from \"react-bootstrap/Image\";\nimport Logo from \"./images/logo.png\";\n\nclass Header extends Component {\n  state = {};\n  render() {\n    return (\n      <Jumbotron fluid className=\"jumbo-header\" id=\"home\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://www.cosmopolitan.com/\"\n        >\n          <Image id=\"logo\" src={Logo} />\n        </a>\n        <Image className=\"header-image\" src={headerImage} fluid />\n        <h1 className=\"heading\">\n          <span>This is climate change</span>\n        </h1>\n      </Jumbotron>\n\n      // <Jumbotron>\n      //   <Image src={headerImage} fluid/>\n      // </Jumbotron>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nclass TextImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data2: this.props.textData\n    };\n  }\n  render() {\n    let heading1;\n\n    if(this.props.headingStyle === 2) {\n      heading1 = (\n        <h2 className=\"heading\">\n          <span>{this.props.heading}</span>\n        </h2>\n      );\n    }\n\n    if (this.props.headingStyle === 3) {\n      heading1 = (\n        <h3 className=\"heading\">\n          <span>{this.props.heading}</span>\n        </h3>\n      );\n    }\n\n   /* let heading1 = (\n      <h3 className=\"heading\">\n        <span>{this.props.heading}</span>\n      </h3>\n    );*/\n    /*let heading2 = <h3> </h3>;*/\n    let thisStyle = this.props.border;\n\n    let imageTag = (\n      <img\n        className=\"borderImage\"\n        style={{ color: thisStyle, maxWidth: \"100%\", height: \"auto\" }}\n        src={this.props.picture}\n        alt={this.props.altText}\n      />\n    );\n\n    let textTag = (\n      <p>\n        {this.props.textData1}\n        <br />\n        <br />\n        {this.props.textData2}\n      </p>\n    );\n\n    let hbox1;\n    let hbox2;\n    let box1;\n    let box2;\n\n    \n\n    if (this.props.layout === 2) {\n      hbox1 = heading1;\n      /*hbox2 = heading2;*/\n      box1 = textTag;\n      box2 = imageTag;\n    } \n    \n    if(this.props.layout === 1){\n      /*hbox1 = heading2;*/\n      hbox2 = heading1;\n      box1 = imageTag;\n      box2 = textTag;\n    }\n\n\n    return (\n      <div className=\"spacing\">\n        <Container className=\"container main\">\n          <Row className=\"headerRow\">\n            <Col className=\"container\" xs={6}>\n              {hbox1}\n            </Col>\n            <Col className=\"container\" xs={6}>\n              {hbox2}\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"container\" xs={6}>\n              {box1}\n            </Col>\n            <Col className=\"container\" xs={6}>\n              {box2}\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default TextImage;\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nclass PopupCard extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"popup_inner\">\n        <Card style={{ width: \"36rem\" }}>\n          <Card.Body>\n            <Card.Title className=\"popupTitle\">\n              {this.props.cardTitle}\n            </Card.Title>\n            <Card.Text>{this.props.cardText1}</Card.Text>\n            <Card.Text>{this.props.cardText2}</Card.Text>\n            <button className=\"popupBtn\" onClick={this.props.closePopup}>\n              close me\n            </button>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default PopupCard;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport PopupCard from \"./PopupCard\";\nimport Button from \"react-bootstrap/Button\";\n\nimport {\n  ComposedChart,\n  Bar,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nclass Co2Diagram extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopup: false\n    };\n  }\n\n  togglePopUp() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  render() {\n    let textData = this.props.textData;\n\n    let co2 = this.props.CO2Emission;\n    if (co2 === undefined) {\n      return <p>There is no data.</p>;\n    }\n\n    const COLORS = [\"#EF0E7C\", \"#00A99D\", \"#F6A2B6\", \"#87D8D6\", \"#B4E2F0\"];\n\n    let dataBarChart = [];\n    co2.map(x =>\n      dataBarChart.push({\n        Year: x.Year,\n        Total: x.Total,\n        GasFuel: x[\"Gas Fuel\"],\n        LiquidFuel: x[\"Liquid Fuel\"],\n        SolidFuel: x[\"Solid Fuel\"],\n        Cement: x.Cement,\n        GasFlaring: x[\"Gas Flaring\"]\n      })\n    );\n\n    let filterData = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n\n    dataBarChart = filterData(dataBarChart, 3);\n    return (\n      <div className=\"spacing\">\n        {this.state.showPopup ? (\n          <PopupCard\n            closePopup={this.togglePopUp.bind(this)}\n            cardTitle={textData.cardTitle}\n            cardText1={textData.cardText1}\n            cardText2={textData.cardText2}\n          />\n        ) : null}\n        <Container className=\"container main\">\n          <Row>\n            <h2 className=\"heading separate\">{this.props.heading}</h2>\n          </Row>\n          <div className=\"diagram\">\n            <Row className=\"alignRight\">\n              <Button\n                variant=\"info\"\n                // className=\"popup\"\n                onClick={this.togglePopUp.bind(this)}\n              >\n                What does this mean?\n              </Button>\n            </Row>\n            <Row className=\"centeredContent\">\n              <ComposedChart\n                width={1000}\n                height={500}\n                data={dataBarChart}\n                margin={{\n                  top: 20,\n                  right: 30,\n                  left: 20,\n                  bottom: 5\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"Year\" />\n                <YAxis />\n                <Tooltip content={dataBarChart.Year} />\n                <Legend />\n\n                <Bar dataKey=\"GasFuel\" stackId=\"a\" fill={COLORS[0]} />\n                <Bar dataKey=\"GasFlaring\" stackId=\"a\" fill={COLORS[1]} />\n                <Bar dataKey=\"LiquidFuel\" stackId=\"a\" fill={COLORS[2]} />\n                <Bar dataKey=\"Cement\" stackId=\"a\" fill={COLORS[3]} />\n                <Bar dataKey=\"SolidFuel\" stackId=\"a\" fill={COLORS[4]} />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"Total\"\n                  stroke=\"#EF4726\"\n                  activeDot={{ r: 8 }}\n                />\n              </ComposedChart>\n            </Row>\n            <Row>\n              <p className=\"label-center\">\n                Million Metric Tons of CO2 Emission\n              </p>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Co2Diagram;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport PopupCard from \"./PopupCard\";\nimport Button from \"react-bootstrap/Button\";\nimport { Icon } from \"semantic-ui-react\";\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine\n} from \"recharts\";\n\nclass LineCharts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopup: false\n    };\n  }\n\n  togglePopUp() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  render() {\n    let textData = this.props.textData;\n\n    let co2 = this.props.CO2Emission;\n    let temp = this.props.globalTemp;\n    if (co2 === undefined) {\n      return <p>There is no data.</p>;\n    }\n    if (temp === undefined) {\n      return <p>There is no data.</p>;\n    }\n\n    let dataLineChart1 = [];\n    co2.map(x =>\n      dataLineChart1.push({\n        Year: x.Year,\n        \"Total CO2 Emission\": x.Total\n      })\n    );\n\n    let dataLineChart2 = [];\n    temp.map(x =>\n      dataLineChart2.push({\n        Year: x.Year,\n        \"Average Temperature\": x.Mean\n      })\n    );\n\n    dataLineChart2.reverse();\n\n    return (\n      <div className=\"spacing\">\n        {this.state.showPopup ? (\n          <PopupCard\n            closePopup={this.togglePopUp.bind(this)}\n            cardTitle={textData.cardTitle}\n            cardText1={textData.cardText1}\n            cardText2={textData.cardText2}\n          />\n        ) : null}\n\n        <Container className=\"container main\">\n        <Row>\n            <h2 className=\"heading separate\">{this.props.heading}</h2>\n          </Row>\n          <div className=\"diagram\">\n            <Row className=\"alignRight\">\n              <Button\n                variant=\"info\"\n                // className=\"popup\"\n                onClick={this.togglePopUp.bind(this)}\n              >\n                What does this mean?\n              </Button>\n            </Row>\n\n            <Row className=\"doubleDiagram\">\n              <Col className=\"container\" xs={6}>\n                <LineChart\n                  width={450}\n                  height={300}\n                  data={dataLineChart1}\n                  margin={{ top: 5, right: 20, left: 0, bottom: 5 }}\n                  activeDot={{ r: 8 }}\n                  syncId=\"syncID\"\n                >\n                  <XAxis dataKey=\"Year\" />\n                  <YAxis />\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <Tooltip />\n\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"Total CO2 Emission\"\n                    stroke=\"#EF0E7C\"\n                    activeDot={{ r: 8 }}\n                  />\n                </LineChart>\n              </Col>\n              <Col className=\"container\" xs={6}>\n                <LineChart\n                  width={450}\n                  height={300}\n                  data={dataLineChart2}\n                  margin={{ top: 5, right: 20, left: 0, bottom: 5 }}\n                  activeDot={{ r: 8 }}\n                  syncId=\"syncID\"\n                >\n                  <XAxis dataKey=\"Year\" />\n                  <YAxis />\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <Tooltip />\n\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"Average Temperature\"\n                    stroke=\"#00A99D\"\n                    activeDot={{ r: 8 }}\n                  />\n                  <ReferenceLine x=\"Page C\" stroke=\"red\" label=\"Max PV PAGE\"/>\n                  <ReferenceLine y={1.5} label=\"Paris Agreement\" stroke=\"red\"/>\n                </LineChart>\n              </Col>\n            </Row>\n            <Row className=\"centeredContent\">\n              <Col className=\"container\" xs={6}>\n                <p className=\"label-center\">\n                  <Icon name=\"certificate\" className=\"icon-emission\" />\n                  Million Metric Tons of CO2 Emission\n                </p>\n              </Col>\n\n              <Col className=\"container\" xs={6}>\n                <p className=\"label-center\">\n                  <Icon name=\"certificate\" className=\"icon-temp\" />\n                  Global Average Temperature{\" \"}\n                </p>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default LineCharts;\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport PopupCard from \"./PopupCard\";\nimport Button from \"react-bootstrap/Button\";\nimport { Icon } from \"semantic-ui-react\";\n\nimport { AreaChart, Area, XAxis, YAxis, Tooltip } from \"recharts\";\n\nclass AreaCharts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showPopup: false\n    };\n  }\n\n  togglePopUp() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n\n  render() {\n    let textData = this.props.textData;\n    let ice = this.props.iceVolume;\n    let sea = this.props.seaLevel;\n    if (ice === undefined) {\n      return <p>There is no data.</p>;\n    }\n    if (sea === undefined) {\n      return <p>There is no data.</p>;\n    }\n\n    let dataLineChart1 = [];\n    ice.map(x =>\n      dataLineChart1.push({\n        Year: x.Year,\n        \"Average Glacier Thickness\": x[\"Mean cumulative mass balance\"]\n      })\n    );\n\n    let dataLineChart2 = [];\n    sea.map(x =>\n      dataLineChart2.push({\n        Year: x.Time,\n        \"Average Sea Level\": x.GMSL\n      })\n    );\n\n    return (\n      <div className=\"Diagram spacing\">\n        {this.state.showPopup ? (\n          <PopupCard\n            closePopup={this.togglePopUp.bind(this)}\n            cardTitle={textData.cardTitle}\n            cardText1={textData.cardText1}\n            cardText2={textData.cardText2}\n          />\n        ) : null}\n        <Container className=\"container main\">\n          {/* <h3 className=\"heading\">\n            <span>{this.props.heading}</span>\n        </h3> */}\n          <Row>\n            <h2 className=\"heading separate\">{this.props.heading}</h2>\n          </Row>\n          <div className=\"diagram\">\n            <Row className=\"alignRight\">\n              <Button\n                variant=\"info\"\n                // className=\"popup\"\n                onClick={this.togglePopUp.bind(this)}\n              >\n                What does this mean?\n              </Button>\n            </Row>\n\n            <Row className=\"doubleDiagram\">\n              <Col className=\"container\" xs={6}>\n                <AreaChart\n                  width={450}\n                  height={300}\n                  data={dataLineChart1}\n                  margin={{\n                    top: 5,\n                    right: 20,\n                    left: 0,\n                    bottom: 5\n                  }}\n                  syncId=\"syncID2\"\n                >\n                  <XAxis dataKey=\"Year\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"Average Glacier Thickness\"\n                    stroke=\"#02958a\"\n                    fill=\"#02958a\"\n                    activeDot={{ r: 8 }}\n                  />\n                </AreaChart>\n              </Col>\n              <Col className=\"container\" xs={6}>\n                <AreaChart\n                  width={450}\n                  height={300}\n                  data={dataLineChart2}\n                  margin={{\n                    top: 5,\n                    right: 20,\n                    left: 0,\n                    bottom: 5\n                  }}\n                  syncId=\"syncID2\"\n                >\n                  <XAxis dataKey=\"Year\" />\n                  <YAxis />\n                  <Tooltip />\n\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"Average Sea Level\"\n                    stroke=\"#207C97\"\n                    fill=\"#207C97\"\n                    activeDot={{ r: 8 }}\n                  />\n                </AreaChart>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"container\" xs={6}>\n                <p className=\"label-center\">\n                  <Icon name=\"certificate\" className=\"icon-ice\" />\n                  Average Mass Of Measured Glacier\n                </p>\n                <p className=\"chartDescription\">\n                  * In this diagram negative values indicate a net loss of ice and snow compared\n                  with the base year of 1945. For consistency, measurements are\n                  in meters of water equivalent, which represent changes in the\n                  average thickness of a glacier.\n                </p>\n              </Col>\n              <Col className=\"container\" xs={6}>\n                <p className=\"label-center\">\n                  <Icon name=\"certificate\" className=\"icon-sea\" />\n                  Average Global Sea Level In mm\n                </p>\n                <p className=\"chartDescription\">\n                 * This diagram shows cumulative changes in sea level for the\n                  world’s oceans since 1880, based on a combination of long-term\n                  tide gauge measurements and recent satellite measurements.\n                </p>\n              </Col>\n            </Row>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AreaCharts;\n","import React, { Component } from \"react\";\nimport BeforeAfterSlider from \"react-before-after-slider\";\nimport beforeImage from \"./images/before.jpg\";\nimport afterImage from \"./images/after.jpg\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass BeforeAfter extends Component {\n  state = {};\n\n  render() {\n    const before = beforeImage;\n    const after = afterImage;\n    return (\n      <Container className=\"container main spacing\">\n        <Row className=\"centeredContent beforeAfter\">\n          <Col xs={4}>\n            <h4 className=\"heading\">{this.props.heading}</h4>\n            <p className=\"infoP\">{this.props.text}</p>\n          </Col>\n          <Col xs={8}>\n            <BeforeAfterSlider\n              before={before}\n              after={after}\n              width={600}\n              height={480}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default BeforeAfter;\n","import React, { Component } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\n\nconst CheckBox = props => {\n  return (\n    <li>\n      <input\n        key={props.id}\n        onChange={props.handleCheckedElement}\n        type=\"checkbox\"\n        checked={props.isChecked}\n        value={props.value}\n      />{\" \"}\n      {props.value}\n    </li>\n  );\n};\n\nexport default class CompareHabits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      habits: [\n        { id: 1, value: \"Go vegetarian\", isChecked: false },\n        { id: 2, value: \"Recycle all waste\", isChecked: false },\n        { id: 3, value: \"Only using LED lights\", isChecked: false },\n        { id: 4, value: \"Get down to zero foodwaste\", isChecked: false },\n        { id: 5, value: \"Eat locally produced food\", isChecked: false },\n        {\n          id: 6,\n          value: \"Minimise your driving to max 30km a day\",\n          isChecked: false\n        }\n      ]\n    };\n  }\n\n  handleCheckedElement = event => {\n    let habits = this.state.habits;\n    habits.forEach(habit => {\n      if (habit.value === event.target.value)\n        habit.isChecked = event.target.checked;\n    });\n    this.setState({ habits: habits });\n    console.log(this.state.habits);\n  };\n\n  render() {\n    const data = [\n      {\n        name: \"Habits\",\n        \"Go vegetarian\": 0.9,\n        \"Recycle all waste\": 0.21,\n        \"Only using LED lights\": 0.06,\n        \"Get down to zero foodwaste\": 0.37,\n        \"Eat locally produced food\": 0.36,\n        \"Minimise your driving to max 30km a day\": 1.33\n      }\n    ];\n\n    let checkList = (\n      <div className=\"App\">\n        <ul>\n          {this.state.habits.map((habit, index) => {\n            return (\n              <CheckBox\n                key={index}\n                handleCheckedElement={this.handleCheckedElement}\n                {...habit}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    );\n\n    return (\n      \n      <Container className=\"spacing\">\n        <Row>\n            <h2 className=\"heading separate\">{this.props.heading}</h2>\n          </Row>\n        <div className=\"diagram\">\n          <Row>\n            <Col xs={6}>\n              <h4 className=\"heading\">\n                <span>{this.props.subHeading}</span>\n              </h4>\n            </Col>\n          </Row>\n          <Row className=\"alignMiddle\">\n            <Col xs={3} className=\"compare-container\">\n              <p>{this.props.text}</p>\n            </Col>\n\n            <Col className=\"container checkList compare-container\" xs={3}>\n              {checkList}\n            </Col>\n\n            <Col className=\"container compare-container\" xs={6}>\n              <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"Habits\" />\n                <YAxis type=\"number\" domain={[0, 4]} />\n                <Tooltip />\n                {!this.state.habits[0].isChecked ? (\n                  <Bar\n                    barSize={80}\n                    dataKey=\"Go vegetarian\"\n                    stackId=\"a\"\n                    fill=\"#ef0e7c\"\n                    isAnimationActive={false}\n                  />\n                ) : null}\n                {!this.state.habits[1].isChecked ? (\n                  <Bar\n                    barSize={80}\n                    dataKey=\"Recycle all waste\"\n                    stackId=\"a\"\n                    fill=\"#00a99d\"\n                    isAnimationActive={false}\n                  />\n                ) : null}\n                {!this.state.habits[2].isChecked ? (\n                  <Bar\n                    barSize={80}\n                    dataKey=\"Only using LED lights\"\n                    stackId=\"a\"\n                    fill=\"#ffd400\"\n                    isAnimationActive={false}\n                  />\n                ) : null}\n                {!this.state.habits[3].isChecked ? (\n                  <Bar\n                    barSize={80}\n                    dataKey=\"Get down to zero foodwaste\"\n                    stackId=\"a\"\n                    fill=\"#b4e2f0\"\n                    isAnimationActive={false}\n                  />\n                ) : null}\n                {!this.state.habits[4].isChecked ? (\n                  <Bar\n                    barSize={80}\n                    dataKey=\"Eat locally produced food\"\n                    stackId=\"a\"\n                    fill=\"#f6a2b6\"\n                    isAnimationActive={false}\n                  />\n                ) : null}\n                {!this.state.habits[5].isChecked ? (\n                  <Bar\n                    barSize={80}\n                    dataKey=\"Minimise your driving to max 30km a day\"\n                    stackId=\"a\"\n                    fill=\"#87d8d6\"\n                    isAnimationActive={false}\n                  />\n                ) : null}\n                <Legend\n                  layout=\"vertical\"\n                  verticalAlign=\"middle\"\n                  align=\"right\"\n                  width={200}\n                  style={{ right: \"2px\" }}\n                />\n              </BarChart>\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"container compare-container\" xs={6}></Col>\n            <Col className=\"container compare-container\" xs={6}>\n              <p className=\"label-center\"> Tons of CO2 Emissions</p>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nclass Footer extends Component {\n  state = {};\n  render() {\n    return (\n      <Container>\n        <Row className=\"centeredContent\">\n          <p className=\"footerText\">©{new Date().getFullYear()} <span className=\"footerText cosmo\">COSMOPOLITAN</span></p>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Logo from \"./images/logopink.png\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport { Menu, Sticky } from \"semantic-ui-react\";\n\nexport default class MenuBar extends Component {\n  state = { activeItem: \"home\" };\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <Sticky context={this.props.context}>\n        <div className=\"menubar\">\n          <Menu pointing secondary>\n            <Menu.Item href=\"#home\" className=\"menu-logo\">\n              <AnchorLink href=\"#home\">\n                <img\n                  src={Logo}\n                  height=\"100%\"\n                  width=\"100%\"\n                  alt=\"Cosmopolitan's logo\"\n                />\n              </AnchorLink>\n            </Menu.Item>\n\n            <Menu.Menu position=\"right\">\n              <Menu.Item\n                href=\"#home\"\n                name=\"home\"\n                active={activeItem === \"home\"}\n                onClick={this.handleItemClick}\n              >\n                <AnchorLink href=\"#home\">Home</AnchorLink>\n              </Menu.Item>\n              <Menu.Item\n                href=\"#co2\"\n                name=\"co2\"\n                active={activeItem === \"co2\"}\n                onClick={this.handleItemClick}\n              >\n                <AnchorLink href=\"#co2\">Emissions</AnchorLink>\n              </Menu.Item>\n\n              <Menu.Item\n                href=\"#temp\"\n                name=\"temp\"\n                active={activeItem === \"temp\"}\n                onClick={this.handleItemClick}\n              >\n                <AnchorLink href=\"#temp\">Temperature</AnchorLink>\n              </Menu.Item>\n\n              <Menu.Item\n                href=\"#ice\"\n                name=\"ice\"\n                active={activeItem === \"ice\"}\n                onClick={this.handleItemClick}\n              >\n                <AnchorLink href=\"#ice\">Glaciers</AnchorLink>\n              </Menu.Item>\n\n              <Menu.Item\n                href=\"#sea\"\n                name=\"sea\"\n                active={activeItem === \"sea\"}\n                onClick={this.handleItemClick}\n              >\n                <AnchorLink href=\"#sea\">Seas</AnchorLink>\n              </Menu.Item>\n\n              <Menu.Item\n                href=\"#tips\"\n                name=\"tips\"\n                active={activeItem === \"tips\"}\n                onClick={this.handleItemClick}\n              >\n                <AnchorLink href=\"#tips\">What you can do</AnchorLink>\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        </div>\n      </Sticky>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Tips extends Component {\n  render() {\n    return (\n      <Container className=\"spacing\">\n        <h3 className=\"heading\">\n          <span>Six simple changes you can do</span>\n        </h3>\n        <Row className=\"cardrow\">\n          <Col xs={4} className=\"centeredContent\">\n          <Card>\n              <Image\n                src=\"https://raw.githubusercontent.com/KajsaEklof/ux-climate-app/implementation2/src/components/images/tipsImage1.png\"\n                wrapped\n                ui={false}\n              />\n              <Card.Content>\n                <Card.Header> Recycling saves emissions</Card.Header>\n                <Card.Description>\n                  Recycling 1 kg of paper instead of landfilling it avoids\n                  almost 1 kg of CO2 emissions, as well as methane emissions.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Col>\n          <Col xs={4} className=\"centeredContent\">\n            \n            <Card>\n              <Image\n                src=\"https://raw.githubusercontent.com/KajsaEklof/ux-climate-app/implementation2/src/components/images/tipsImage2.png\"\n                wrapped\n                ui={false}\n              />\n              <Card.Content>\n                <Card.Header>Be picky about packaging</Card.Header>\n\n                <Card.Description>\n                  Plastic packaging creates a lot of waste. Try to avoid\n                  packaged products and look for refills of products like\n                  shampoo.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Col>\n          <Col xs={4} className=\"centeredContent\">\n            <Card>\n              <Image\n                src=\"https://raw.githubusercontent.com/KajsaEklof/ux-climate-app/implementation2/src/components/images/tipsImage3.png\"\n                wrapped\n                ui={false}\n              />\n              <Card.Content>\n                <Card.Header>Buy products in season</Card.Header>\n\n                <Card.Description>\n                  Growing food outside its normal growing season requires\n                  tremendous amounts of water, energy and other resources.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"cardrow\">\n          <Col xs={4} className=\"centeredContent\">\n            <Card>\n              <Image\n                src=\"https://raw.githubusercontent.com/KajsaEklof/ux-climate-app/implementation2/src/components/images/tip4.png\"\n                wrapped\n                ui={false}\n              />\n              <Card.Content>\n                <Card.Header>Swap, sell or donate clothes</Card.Header>\n\n                <Card.Description>\n                  Instead of buying new, consider borrowing, renting or buying\n                  second-hand.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Col>\n          <Col xs={4} className=\"centeredContent\">\n            <Card>\n              <Image\n                src=\"https://raw.githubusercontent.com/KajsaEklof/ux-climate-app/implementation2/src/components/images/tip5.png\"\n                wrapped\n                ui={false}\n              />\n              <Card.Content>\n                <Card.Header> Don't waste food </Card.Header>\n\n                <Card.Description>\n                  Buy only the amount you need, and keep your leftovers for\n                  later!\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Col>\n          <Col xs={4} className=\"centeredContent\">\n            <Card>\n              <Image\n                src=\"https://raw.githubusercontent.com/KajsaEklof/ux-climate-app/implementation2/src/components/images/tip7.png\"\n                wrapped\n                ui={false}\n              />\n              <Card.Content>\n                <Card.Header>Use reusable shopping bags</Card.Header>\n\n                <Card.Description>\n                  And buy kitchen and toilet roll made from recycled paper.\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Tips;\n","import React, { Component, createRef } from \"react\";\nimport RenderMap from \"./components/RenderMap\";\nimport Header from \"./components/Header\";\nimport TextImage from \"./components/TextImage\";\nimport Co2Diagram from \"./components/Co2Diagram\";\nimport LineCharts from \"./components/LineCharts\";\nimport AreaCharts from \"./components/AreaCharts\";\nimport BeforeAfterSlider from \"./components/BeforeAfterSlider\";\nimport CompareHabits from \"./components/CompareHabits\";\nimport Footer from \"./components/Footer\";\nimport data from \"./components/Content.json\"; /*This is the json file with all our content and copy text for the applicaiton*/\nimport icejsonData from \"./Data/iceData.json\";\nimport seajsonData from \"./Data/seaData.json\";\nimport co2Data from \"./Data/co2Data.json\";\nimport tempjsonData from \"./Data/tempData.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport MenuBar from \"./components/MenuBar\";\nimport Tips from \"./components/Tips\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textData: data,\n      CO2Emission: [],\n      globalTemp: [],\n      seaLevel: [],\n      iceVolume: [],\n      mapContent: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // const url =\n    //   \"https://my.api.mockaroo.com/co2.json?key=8eb9e6f0\"; /* This is the Co2 Emission API */\n    // const response = await fetch(url);\n    // const data = await response.json();\n\n    // const url2 =\n    //   \"https://my.api.mockaroo.com/temp.json?key=8eb9e6f0\"; /* This is the Global Temperature API */\n    // const response2 = await fetch(url2);\n    // const data2 = await response2.json();\n\n    /* const url3 = \"https://my.api.mockaroo.com/glaciersize.json?key=8eb9e6f0\";\n    const response3 = await fetch(url3); */\n\n    /* const url4 = \"https://my.api.mockaroo.com/sealevel.json?key=8eb9e6f0\"; \n    const response4 = await fetch(url4); */\n\n    // Importing co2 json data and filtering on year\n    const emissions = co2Data;\n    const emissionData = emissions.filter(x => x.Year > 1944 && x.Year < 2014);\n\n    // Importing Glacier data from json and filtering\n    const iceData = icejsonData;\n    const glacierData = iceData.filter(x => x.Year > 1989 && x.Year < 2014);\n\n    //Importing Sea level data from json and filtering\n    const seaDataJson = seajsonData;\n    const seaData = seaDataJson.filter(\n      x =>\n        Date.parse(x.Time) > Date.parse(\"1990-01-01\") &&\n        Date.parse(x.Time) < Date.parse(\"2014-01-01\")\n    );\n    seaData.map(x => (x.Time = x.Time.substring(0, 4)));\n\n    // Importing temperature json data and filtering on year\n    const temperatureData = tempjsonData;\n    const yearFilteredTempData = temperatureData.filter(\n      x => x.Year > 1944 && x.Year < 2014\n    );\n    const tempData = yearFilteredTempData.filter(p => p.Source === \"GISTEMP\"); //only rows that have source GISTEMP\n\n    // Setting state with all filtered data\n    this.setState({\n      globalTemp: tempData,\n      CO2Emission: emissionData,\n      iceVolume: glacierData,\n      seaLevel: seaData\n    });\n  }\n\n  // Createting a reference for the menu bar \n  contextRef = createRef();\n \n\n  render() {\n    const content = this.state\n      .textData; /* Saves this.state.textData in a constent */\n    /*const [mapContent, setContent] = useState(\"\");*/\n\n    return (\n      <div id=\"App\" ref={this.contextRef}>\n        <Header />\n        <MenuBar context={this.contextRef} />\n        <div id=\"page-content\">\n          <div className=\"section-white\">\n            <TextImage\n              headingStyle={2}\n              layout={2}\n              heading={content.introduction.heading}\n              textData1={content.introduction.info1}\n              textData2={content.introduction.info2}\n              picture={content.introduction.picture}\n              altText={content.introduction.altText}\n              border={content.introduction.border}\n            />\n          </div>\n          <div className=\"section-pink\" id=\"co2\">\n            <Co2Diagram\n              CO2Emission={this.state.CO2Emission}\n              textData={content.co2Popup}\n              heading=\"What are CO2 Emissions Anyway?\"\n            />\n\n            <TextImage\n              headingStyle={3}\n              layout={1}\n              heading={content.co2Food.heading}\n              textData1={content.co2Food.info1}\n              textData2={content.co2Food.info2}\n              picture={content.co2Food.picture}\n              altText={content.co2Food.altText}\n            />\n\n            <TextImage\n              headingStyle={3}\n              layout={2}\n              heading={content.co2Clothes.heading}\n              textData1={content.co2Clothes.info1}\n              textData2={content.co2Clothes.info2}\n              picture={content.co2Clothes.picture}\n              altText={content.co2Clothes.altText}\n            />\n          </div>\n          <div className=\"section-white\" id=\"temp\">\n            <LineCharts\n              CO2Emission={this.state.CO2Emission}\n              globalTemp={this.state.globalTemp}\n              textData={content.co2vsTempPopup}\n              heading=\"Increased Emissions = Rising Temperature\"\n            />\n          </div>\n          <div className=\"section-pink\" id=\"ice\">\n            <Container className=\"container main\">\n              <Row>\n                <h2 className=\"heading separate\">\n                  <span>What Happens When the Earth Gets Warmer?</span>\n                </h2>\n              </Row>\n            </Container>\n            <TextImage\n              headingStyle={3}\n              layout={1}\n              heading={content.glaciers.heading}\n              textData1={content.glaciers.info1}\n              textData2={content.glaciers.info2}\n              picture={content.glaciers.picture}\n              altText={content.glaciers.altText}\n            />\n            <BeforeAfterSlider\n              heading={content.beforeAfter.heading}\n              text={content.beforeAfter.info1}\n            />\n          </div>\n          <div className=\"section-white\" id=\"sea\">\n            <AreaCharts\n              seaLevel={this.state.seaLevel}\n              iceVolume={this.state.iceVolume}\n              textData={content.icevsSeaPopup}\n              heading=\"When The Glaciers Melt... Sea Levels Rise\"\n            />\n\n            <RenderMap />\n          </div>\n          <div className=\"section-pink\" id=\"tips\">\n            <CompareHabits\n              subHeading={content.habits.subheading}\n              text={content.habits.info1}\n              heading=\" What You Can Do To Impact the Climate\"\n            />\n            <Tips />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}